name: Build Cross-Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          libgflags-dev \
          libsnappy-dev \
          zlib1g-dev \
          libbz2-dev \
          liblz4-dev \
          libzstd-dev
    
    - name: Compile RocksDB v10.2.1 from source
      run: |
        cd /tmp
        git clone https://github.com/facebook/rocksdb.git
        cd rocksdb
        git checkout v10.2.1
        make shared_lib -j2
        sudo make install-shared
        sudo ldconfig
    
    - name: Set CGO environment variables
      run: |
        echo "CGO_ENABLED=1" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" >> $GITHUB_ENV
        echo "CGO_CFLAGS=-I/usr/local/include" >> $GITHUB_ENV
        echo "CGO_LDFLAGS=-L/usr/local/lib -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd" >> $GITHUB_ENV
    
    - name: Create build directory
      run: mkdir -p build
    
    - name: Build for Linux amd64
      run: |
        go build -ldflags "-X main.version=${{ github.ref_name }}" -o build/rocksdb-cli-linux-amd64 ./cmd
    
    - name: Build for Linux arm64
      run: |
        GOOS=linux GOARCH=arm64 go build -ldflags "-X main.version=${{ github.ref_name }}" -o build/rocksdb-cli-linux-arm64 ./cmd
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-binaries
        path: build/rocksdb-cli-linux-*

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install build dependencies
      run: |
        brew install cmake git
        brew install gflags snappy lz4 zstd bzip2
    
    - name: Compile RocksDB v10.2.1 from source
      run: |
        cd /tmp
        git clone https://github.com/facebook/rocksdb.git
        cd rocksdb
        git checkout v10.2.1
        make shared_lib -j2
        make install-shared
    
    - name: Set CGO environment variables
      run: |
        echo "CGO_ENABLED=1" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" >> $GITHUB_ENV
        echo "CGO_CFLAGS=-I/usr/local/include" >> $GITHUB_ENV
        echo "CGO_LDFLAGS=-L/usr/local/lib -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd" >> $GITHUB_ENV
    
    - name: Create build directory
      run: mkdir -p build
    
    - name: Build for macOS amd64
      run: |
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=${{ github.ref_name }}" -o build/rocksdb-cli-darwin-amd64 ./cmd
    
    - name: Build for macOS arm64
      run: |
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=${{ github.ref_name }}" -o build/rocksdb-cli-darwin-arm64 ./cmd
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v3
      with:
        name: macos-binaries
        path: build/rocksdb-cli-darwin-*

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-snappy
          mingw-w64-x86_64-lz4
          mingw-w64-x86_64-zstd
          mingw-w64-x86_64-bzip2
          git
    
    - name: Compile RocksDB v10.2.1 from source
      shell: msys2 {0}
      run: |
        cd /tmp
        git clone https://github.com/facebook/rocksdb.git
        cd rocksdb
        git checkout v10.2.1
        make shared_lib -j2
        make install-shared PREFIX=/mingw64
    
    - name: Create build directory
      run: mkdir build
    
    - name: Build for Windows amd64
      shell: msys2 {0}
      run: |
        export CGO_ENABLED=1
        export PKG_CONFIG_PATH="/mingw64/lib/pkgconfig"
        export CGO_CFLAGS="-I/mingw64/include"
        export CGO_LDFLAGS="-L/mingw64/lib -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd"
        go build -ldflags "-X main.version=${{ github.ref_name }}" -o build/rocksdb-cli-windows-amd64.exe ./cmd
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-binaries
        path: build/rocksdb-cli-windows-*

  release:
    if: github.event_name == 'release'
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Release binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          linux-binaries/*
          macos-binaries/*
          windows-binaries/* 